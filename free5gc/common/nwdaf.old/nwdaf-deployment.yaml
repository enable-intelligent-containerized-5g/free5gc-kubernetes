apiVersion: apps/v1
kind: Deployment
metadata:
  name: free5gc-nwdaf
  labels:
    app: free5gc
    nf: nwdaf
    name: module1
spec:
  selector:
    matchLabels:
      app: free5gc
      nf: nwdaf
      name: module1
  replicas: 1
  template:
    metadata:
      labels:
        app: free5gc
        nf: nwdaf
        name: module1
    spec:
      initContainers:
      - name: wait-nrf
        image: appropriate/curl
        command: ['sh', '-c', 'until curl -s -o /dev/null -w "%{http_code}" http://nrf-nnrf:8000 | grep "200"; do sleep 1; done;']
      containers:
        - image: edierbra/free5gc-dev:v3.2.5.7 # edierbra/free5gc:v3.2.1
          name: nwdaf
          ports:
            - containerPort: 8000
          # command: ["./nwdaf"]
          # args: ["--config", "config/nwdafcfg.yaml"]
          command: ["/bin/sh", "-c"]
          args: ["cd ./src/NFs/nwdaf.old && air"]
          env:
            - name: GIN_MODE
              value: release
          volumeMounts:
            - mountPath: /root/go/
              name: go-path-volume
            - mountPath: /free5gc/src/
              name: free5gc-vanilla-volume
            - mountPath: /free5gc/src/NFs/nwdaf.old/config/
              name: nwdaf-volume
            - mountPath: /free5gc/config/
              name: nwdaf-volume
          # resources:
          #   requests:
          #     memory: "100Mi"
          #     cpu: "100m"
          #   limits:
          #     memory: "512Mi"
          #     cpu: "250m"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: nwdaf-volume
          projected:
            sources:
              - configMap:
                  name: nwdaf-configmap
        - name: free5gc-vanilla-volume
          persistentVolumeClaim:
            claimName: free5gc-vanilla-volume-claim
        - name: go-path-volume
          persistentVolumeClaim:
            claimName: go-path-volume-claim
