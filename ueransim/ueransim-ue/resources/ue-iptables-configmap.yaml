apiVersion: v1
kind: ConfigMap
metadata:
  name: ue-iptables-configmap
  labels:
    app: ueransim
data:
  ue-iptables.sh: |
    #!/bin/bash

    # Add an ip route if not exist
    add_route() {
        local interface=$1
        local route=$2
        
        # Check if the route exists
        ip route | grep -q "$route"
        if [ $? -ne 0 ]; then
            echo "Adding route $route dev $interface"
            ip route add "$route" dev "$interface"
        else
            echo "The route $route already exists"
        fi
    }

    # Bucle infinito que se repite cada 5 segundos
    while true; do
        echo "---"
        # Run 'ip a' and filter the lines that contain interfaces starting with 'uesimtun'
        interfaces=$(ip a | grep -E '^[0-9]+: uesimtun[0-9]+:' | cut -d: -f2 | tr -d ' ')

        # Iterate over each found interface
        for iface in $interfaces; do
            # Find the IP address associated with the current interface
            ip_addr=$(ip a show "$iface" | grep -oP '(?<=inet\s)\d+(\.\d+){3}/\d+')
            
            # Check if an IP address was found for the interface
            if [ -n "$ip_addr" ]; then
                # Print the interface and its IP
                echo "Interfaz: $iface, IP: $ip_addr"

                # Extract the first two octets and build the route
                route=$(echo "$ip_addr" | cut -d. -f1-2).0.0/16
                
                # Add the ip route
                add_route "$iface" "$route"
            else
                # IP not found message
                echo "Interface: $iface, IP: Not assigned"
            fi
        done
        
        # Wait 5 seconds
        sleep 5
    done
